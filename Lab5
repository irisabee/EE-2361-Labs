#include "xc.h"
#include "stdio.h"

// CW1: FLASH CONFIGURATION WORD 1 (see PIC24 Family Reference Manual 24.1)
#pragma config ICS = PGx1          // Comm Channel Select (Emulator EMUC1/EMUD1 pins are shared with PGC1/PGD1)
#pragma config FWDTEN = OFF        // Watchdog Timer Enable (Watchdog Timer is disabled)
#pragma config GWRP = OFF          // General Code Segment Write Protect (Writes to program memory are allowed)
#pragma config GCP = OFF           // General Code Segment Code Protect (Code protection is disabled)
#pragma config JTAGEN = OFF        // JTAG Port Enable (JTAG port is disabled)


// CW2: FLASH CONFIGURATION WORD 2 (see PIC24 Family Reference Manual 24.1)
#pragma config I2C1SEL = PRI       // I2C1 Pin Location Select (Use default SCL1/SDA1 pins)
#pragma config IOL1WAY = OFF       // IOLOCK Protection (IOLOCK may be changed via unlocking seq)
#pragma config OSCIOFNC = ON       // Primary Oscillator I/O Function (CLKO/RC15 functions as I/O pin)
#pragma config FCKSM = CSECME      // Clock Switching and Monitor (Clock switching is enabled, 
                                       // Fail-Safe Clock Monitor is enabled)
#pragma config FNOSC = FRCPLL      // Oscillator Select (Fast RC Oscillator with PLL module (FRCPLL))

void setup(void)
{
    CLKDIVbits.RCDIV = 0;  //Set RCDIV=1:1 (default 2:1) 32MHz or FCY/2=16M
    AD1PCFG = 0x9fff;
    //TRISB = 0x0003;
    //LATB = 0xF3FF;        
    
    I2C2BRG = 0x9D;
    I2C2CONbits.I2CEN = 1;
    I2C2CONbits.I2CSIDL = 0;
    IFS3bits.MI2C2IF = 0;
    
   
}

void delay_ms(unsigned int ms){
    while(ms-- > 0){
        asm("repeat #15998");
        asm("nop");
    }
}

void lcd_init(void){
     delay_ms(50);
    lcd_cmd(0b00111000); // function set, normal instruction mode
    lcd_cmd(0b00111001); // function set, extended instruction mode
    lcd_cmd(0b00010100); // interval osc
    lcd_cmd((0b01110000)); // contrast C3-C0
    lcd_cmd(0b01011110); // Ion, Bon, C5-C4
    lcd_cmd(0b01101100); // follower control
    delay_ms(200);
    lcd_cmd(0b00111000); // function set, normal instruction mode
    lcd_cmd(0b00001100); // Display On
    lcd_cmd(0b00000001); // Clear Display
    delay_ms(2);
}

void lcd_cmd(char command){
    I2C2CONbits.I2CEN = 1;
    
    I2C2CONbits.SEN = 1; //start
    while(I2C2CONbits.SEN);
    IFS3bits.MI2C2IF=0;
    
    I2C2TRN = 0b01111100; //address with R/nW byte
    while(!IFS3bits.MI2C2IF);
    IFS3bits.MI2C2IF=0;
    
    I2C2TRN = 0b00000000; //reset
    while(!IFS3bits.MI2C2IF);
    IFS3bits.MI2C2IF=0;
    
    I2C2TRN = command; //character
    while(!IFS3bits.MI2C2IF);
    IFS3bits.MI2C2IF=0;
    
    I2C2CONbits.PEN = 1;
    while(I2C2CONbits.PEN);
    
}


void lcd_setCursor(char x, char y){
    lcd_cmd(((1 << 7) + (x+0x40 * y)));
}

void lcd_printChar(char myChar){
    I2C2CONbits.I2CEN = 1;
    
    I2C2CONbits.SEN = 1; //start
    while(I2C2CONbits.SEN);
    IFS3bits.MI2C2IF=0;
    
    I2C2TRN = 0b01111100; //address with R/nW byte
    while(!IFS3bits.MI2C2IF);
    IFS3bits.MI2C2IF=0;
    
    I2C2TRN = 0b01000000; //reset
    while(!IFS3bits.MI2C2IF);
    IFS3bits.MI2C2IF=0;
    
    I2C2TRN = 0b10000100; //character
    while(!IFS3bits.MI2C2IF);
    IFS3bits.MI2C2IF=0;
    
    I2C2CONbits.PEN = 1;
    while(I2C2CONbits.PEN);
    
}

void lcd_printStr(const char *s){
    I2C2CONbits.I2CEN = 1;
    
    I2C2CONbits.SEN = 1; //start
    while(I2C2CONbits.SEN);
    IFS3bits.MI2C2IF=0;
    
    I2C2TRN = 0b01111100; //address with R/nW byte
    while(!IFS3bits.MI2C2IF);
    IFS3bits.MI2C2IF=0;
    
    int length = strlen(s);
    for(int i=0; i<length; i++){
        
        I2C2TRN = 0b11000000; //reset
        while(!IFS3bits.MI2C2IF);
        IFS3bits.MI2C2IF=0;
    
        I2C2TRN = s[i]; //character
        while(!IFS3bits.MI2C2IF);
        IFS3bits.MI2C2IF=0;
    }
    
    I2C2CONbits.PEN = 1;
    while(I2C2CONbits.PEN);
}

int main(void) {
    setup();
    lcd_init();
    
    lcd_setCursor(0,0);
    
    lcd_printStr("this lab");
    lcd_setCursor(0,1);
    lcd_printStr("is scary");
    
    long int i;
    while(1){
        delay_ms(500);
    lcd_cmd(0b11<<3);
  
        i++;
    }
    
}
